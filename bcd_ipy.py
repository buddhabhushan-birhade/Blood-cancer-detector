# -*- coding: utf-8 -*-
"""BCD.ipy

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N9rn6VIYct03Gx4gPemMDXWMl99lxeZq
"""

# =========================
# ü©∏ AI-Based Blood Cancer Detection (Google Colab Version)
# =========================

# STEP 1 ‚Äì Install dependencies
!pip install streamlit scikit-learn pandas joblib pyngrok --quiet

# STEP 2 ‚Äì Import modules
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
import joblib, subprocess, threading, time
import streamlit as st
from pyngrok import ngrok
import getpass

# STEP 3 ‚Äì Set up ngrok authtoken
print("üëâ Go to https://dashboard.ngrok.com/get-started/your-authtoken to copy your authtoken.")
token = getpass.getpass("üîë Paste your ngrok authtoken here: ")
ngrok.set_auth_token(token)
print("‚úÖ ngrok token set successfully!\n")

# STEP 4 ‚Äì Create sample dataset
data = """WBC,RBC,Hemoglobin,Platelets,Result
8000,5.2,14.5,250000,Normal
9000,4.8,13.8,220000,Normal
18000,3.8,9.5,80000,Cancer
20000,3.4,8.9,70000,Cancer
4000,4.9,14.1,260000,Normal
3000,3.5,10.0,90000,Cancer
12000,4.1,12.0,150000,Normal
25000,3.2,9.0,60000,Cancer
8500,5.0,14.0,200000,Normal
17000,3.9,10.2,95000,Cancer"""
open("blood_cancer_data.csv","w").write(data)

# STEP 5 ‚Äì Train model
df = pd.read_csv("blood_cancer_data.csv")
X = df[['WBC','RBC','Hemoglobin','Platelets']]
y = df['Result']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
joblib.dump(model, "blood_cancer_model.pkl")

# STEP 6 ‚Äì Create Streamlit app file
app_code = r'''
import streamlit as st
import pandas as pd
import joblib

model = joblib.load("blood_cancer_model.pkl")

st.set_page_config(page_title="AI Blood Cancer Detection", page_icon="ü©∏", layout="centered")

st.markdown("""
    <style>
    .stApp {
        background-image: url('https://images.unsplash.com/photo-1588776814546-65c3d5b9d0e7');
        background-size: cover;
        background-attachment: fixed;
        color: white;
    }
    </style>
""", unsafe_allow_html=True)

st.title("ü©∏ AI-Based Blood Cancer Detection")
st.subheader("Early and Affordable Screening using CBC Parameters")
st.write("Enter your CBC values below to check for early signs of blood cancer. "
         "This tool uses AI to provide an initial prediction ‚Äî not a medical diagnosis.")

WBC = st.number_input("WBC Count (cells/ŒºL)", min_value=1000, max_value=30000, value=8000, step=100)
RBC = st.number_input("RBC Count (million cells/ŒºL)", min_value=2.0, max_value=7.0, value=4.5, step=0.1)
Hemoglobin = st.number_input("Hemoglobin (g/dL)", min_value=5.0, max_value=20.0, value=13.5, step=0.1)
Platelets = st.number_input("Platelets (per ŒºL)", min_value=50000, max_value=600000, value=250000, step=1000)

if st.button("üîç Predict"):
    input_data = pd.DataFrame([[WBC, RBC, Hemoglobin, Platelets]],
                              columns=['WBC','RBC','Hemoglobin','Platelets'])
    prediction = model.predict(input_data)[0]
    st.markdown("---")
    if prediction == "Cancer":
        st.error("‚ö†Ô∏è Possible signs of **Blood Cancer detected**. Please consult a medical professional for further testing.")
    else:
        st.success("‚úÖ No signs of blood cancer detected. CBC values appear normal.")
    st.markdown("---")
    st.caption("Note: This result is AI-generated and not a substitute for a professional medical diagnosis.")
'''
open("app.py","w").write(app_code)

# STEP 7 ‚Äì Launch Streamlit app via ngrok tunnel
def run_app():
    subprocess.run(["streamlit", "run", "app.py", "--server.port", "8501"])

thread = threading.Thread(target=run_app)
thread.start()

time.sleep(5)
public_url = ngrok.connect(8501)
print("üéØ Your Streamlit app is running here:")
print(public_url)